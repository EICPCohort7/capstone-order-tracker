openapi: "3.0.2"
info:
  title: Order Tracker API
  version: "1.0"
servers:
  - url: https://
paths:
  /orders:
    get:
      description: "Returns a list of all orders."
      parameters: []
      responses:
        "200":
          description: Successfully returned orders.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
        "500": 
          $ref: "#/components/responses/500Error" 
    post:
      description: "Create a new order"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        "201":
          description: Successfully added new order
        "400":
          $ref: "#/components/responses/400Error"

  /orders/{order_id}:
    get:
      description: "Obtain order from unique order_id"
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Successfully returned the Order referenced by Order_ID.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
        "404":
          description: Order ID not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    put:
      description: "Replace the order referenced by order_id."
      parameters:
        - name: order_id
          description: The code of the order to be replaced.
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        "200":
          description: Successfully updated the order referenced by order_id.
        "404":
          description: Failed PUT request for order referenced by order_id.
        "500":
          $ref: "#/components/responses/500Error"
  
    patch:
      description: "Edit the existing order referenced by order_id."
      parameters:
        - name: order_id
          description: The order id of the order to be edited/patched.
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        "200":
          description: Successfully edited the order referenced by order_id.
        "404":
          description: Failed PATCH request for order referenced by order_id.
        "500":
          $ref: "#/components/responses/500Error"

    delete:
      description: "Delete a draft order by order_id"
      requestBody:
        required: true
        content:
          application/json:
           schema:
            $ref: "#/components/schemas/Order"
      responses:
        "204":
          description: Successfully deleted the draft order referenced by order_id.
        "404":
          description: Failed DELETE request for the draft order referenced by order_id.
        "500":
          $ref: "#/components/responses/500Error"
          
components:
  schemas:
    Order:
      type: object
      properties:
        order_id:
          type: integer
        customer_id:
          type: integer
        order_status_code:
          type: integer
        order_placed:
          type: string
        order_notes:
          type: string
        shipping_address_id:
          type: integer

  responses:
    400Error:
      description: Invalid request
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    
    500Error:
      description: Order endpoint error
      content:
        application/json:
          schema:
            type: object
            properties: 
              message:
                type: string
